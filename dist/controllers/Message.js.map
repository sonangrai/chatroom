{"version":3,"sources":["../../src/controllers/Message.js"],"names":["saveMsg","req","res","userId","message","body","msgObj","Message","user","userInfo","User","findById","notfoundObj","responseObj","send","save","newObject","successObj","io","sockets","emit","error","failedObj"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACO,MAAMA,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACzC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBH,GAAG,CAACI,IAAhC;AAEA,MAAIC,MAAM,GAAG,IAAIC,gBAAJ,CAAY;AACvBC,IAAAA,IAAI,EAAEL,MADiB;AAEvBC,IAAAA,OAAO,EAAEA;AAFc,GAAZ,CAAb;;AAKA,MAAI;AACF;AACA,QAAIK,QAAQ,GAAG,MAAMC,cAAKC,QAAL,CAAcR,MAAd,CAArB;;AAEA,QAAI,CAACM,QAAL,EAAe;AACb;AACA,UAAIG,WAAW,GAAG,IAAIC,iBAAJ,CAAgB,gBAAhB,EAAkCP,MAAlC,EAA0C,GAA1C,CAAlB;AACA,aAAOJ,GAAG,CAACY,IAAJ,CAASF,WAAT,CAAP;AACD;;AAED,QAAI;AACF,YAAMN,MAAM,CAACS,IAAP,EAAN,CADE,CAGF;;AACA,UAAIC,SAAS,GAAG;AACdP,QAAAA,QADc;AAEdL,QAAAA,OAAO,EAAEA;AAFK,OAAhB,CAJE,CASF;;AACA,UAAIa,UAAU,GAAG,IAAIJ,iBAAJ,CACf,4BADe,EAEfG,SAFe,EAGf,GAHe,CAAjB;AAKAd,MAAAA,GAAG,CAACgB,EAAJ,CAAOC,OAAP,CAAeC,IAAf,CAAoB,cAApB,EAAoCH,UAApC;AACA,aAAOf,GAAG,CAACY,IAAJ,CAASG,UAAT,CAAP;AACD,KAjBD,CAiBE,OAAOI,KAAP,EAAc;AACd;AACA,UAAIC,SAAS,GAAG,IAAIT,iBAAJ,CAAgB,uBAAhB,EAAyCP,MAAzC,EAAiD,GAAjD,CAAhB;AACA,aAAOJ,GAAG,CAACY,IAAJ,CAASD,iBAAT,CAAP;AACD;AACF,GAhCD,CAgCE,OAAOQ,KAAP,EAAc;AACd;AACA,QAAIC,SAAS,GAAG,IAAIT,iBAAJ,CAAgB,uBAAhB,EAAyCP,MAAzC,EAAiD,GAAjD,CAAhB;AACA,WAAOJ,GAAG,CAACY,IAAJ,CAASD,iBAAT,CAAP;AACD;AACF,CA7CM","sourcesContent":["import User from \"../model/User.model\";\nimport Message from \"../model/Message.model\";\nimport responseObj from \"../utils/response\";\n\n/**\n * Save message controller\n * @param {*} req\n * @param {*} res\n */\nexport const saveMsg = async (req, res) => {\n  const { userId, message } = req.body;\n\n  let msgObj = new Message({\n    user: userId,\n    message: message,\n  });\n\n  try {\n    //Getting User Info\n    let userInfo = await User.findById(userId);\n\n    if (!userInfo) {\n      //Creating success object\n      let notfoundObj = new responseObj(\"User not found\", msgObj, 500);\n      return res.send(notfoundObj);\n    }\n\n    try {\n      await msgObj.save();\n\n      //Creating new object with user info\n      let newObject = {\n        userInfo,\n        message: message,\n      };\n\n      //Creating success object\n      let successObj = new responseObj(\n        \"Message added successfully\",\n        newObject,\n        201\n      );\n      res.io.sockets.emit(\"message-sent\", successObj);\n      return res.send(successObj);\n    } catch (error) {\n      //Creating success object\n      let failedObj = new responseObj(\"Message adding failed\", msgObj, 500);\n      return res.send(responseObj);\n    }\n  } catch (error) {\n    //Creating success object\n    let failedObj = new responseObj(\"Message adding failed\", msgObj, 500);\n    return res.send(responseObj);\n  }\n};\n"],"file":"Message.js"}