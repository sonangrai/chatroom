{"version":3,"sources":["../../src/controllers/Message.js"],"names":["User","require","Message","responseObj","exports","saveMsg","req","res","userId","message","body","msgObj","user","userInfo","findById","msg","data","status","send","save","newObject","io","sockets","emit","error"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,wBAAD,CAAvB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAkBF,OAAO,CAAC,mBAAD,CAA/B;AAEA;AACA;AACA;AACA;AACA;;;AACAG,OAAO,CAACC,OAAR,GAAkB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACpC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBH,GAAG,CAACI,IAAhC;AAEA,MAAIC,MAAM,GAAG,IAAIT,OAAJ,CAAY;AACvBU,IAAAA,IAAI,EAAEJ,MADiB;AAEvBC,IAAAA,OAAO,EAAEA;AAFc,GAAZ,CAAb;;AAKA,MAAI;AACF;AACA,QAAII,QAAQ,GAAG,MAAMb,IAAI,CAACc,QAAL,CAAcN,MAAd,CAArB;;AAEA,QAAI,CAACK,QAAL,EAAe;AACb;AACAV,MAAAA,WAAW,CAACY,GAAZ,GAAkB,gBAAlB;AACAZ,MAAAA,WAAW,CAACa,IAAZ,GAAmBL,MAAnB;AACAR,MAAAA,WAAW,CAACc,MAAZ,GAAqB,GAArB;AACA,aAAOV,GAAG,CAACW,IAAJ,CAASf,WAAT,CAAP;AACD;;AAED,QAAI;AACF,YAAMQ,MAAM,CAACQ,IAAP,EAAN,CADE,CAGF;;AACA,UAAIC,SAAS,GAAG;AACdP,QAAAA,QADc;AAEdJ,QAAAA,OAAO,EAAEA;AAFK,OAAhB,CAJE,CASF;;AACAN,MAAAA,WAAW,CAACY,GAAZ,GAAkB,4BAAlB;AACAZ,MAAAA,WAAW,CAACa,IAAZ,GAAmBI,SAAnB;AACAjB,MAAAA,WAAW,CAACc,MAAZ,GAAqB,GAArB;AACAV,MAAAA,GAAG,CAACc,EAAJ,CAAOC,OAAP,CAAeC,IAAf,CAAoB,cAApB,EAAoCpB,WAApC;AACA,aAAOI,GAAG,CAACW,IAAJ,CAASf,WAAT,CAAP;AACD,KAfD,CAeE,OAAOqB,KAAP,EAAc;AACd;AACArB,MAAAA,WAAW,CAACY,GAAZ,GAAkB,uBAAlB;AACAZ,MAAAA,WAAW,CAACa,IAAZ,GAAmBL,MAAnB;AACAR,MAAAA,WAAW,CAACc,MAAZ,GAAqB,GAArB;AACA,aAAOV,GAAG,CAACW,IAAJ,CAASf,WAAT,CAAP;AACD;AACF,GAlCD,CAkCE,OAAOqB,KAAP,EAAc;AACd;AACArB,IAAAA,WAAW,CAACY,GAAZ,GAAkB,uBAAlB;AACAZ,IAAAA,WAAW,CAACa,IAAZ,GAAmBL,MAAnB;AACAR,IAAAA,WAAW,CAACc,MAAZ,GAAqB,GAArB;AACA,WAAOV,GAAG,CAACW,IAAJ,CAASf,WAAT,CAAP;AACD;AACF,CAjDD","sourcesContent":["const User = require(\"../model/User.model\");\nconst Message = require(\"../model/Message.model\");\nconst { responseObj } = require(\"../utils/response\");\n\n/**\n * Save message controller\n * @param {*} req\n * @param {*} res\n */\nexports.saveMsg = async (req, res) => {\n  const { userId, message } = req.body;\n\n  let msgObj = new Message({\n    user: userId,\n    message: message,\n  });\n\n  try {\n    //Getting User Info\n    let userInfo = await User.findById(userId);\n\n    if (!userInfo) {\n      //Creating success object\n      responseObj.msg = \"User not found\";\n      responseObj.data = msgObj;\n      responseObj.status = 500;\n      return res.send(responseObj);\n    }\n\n    try {\n      await msgObj.save();\n\n      //Creating new object with user info\n      let newObject = {\n        userInfo,\n        message: message,\n      };\n\n      //Creating success object\n      responseObj.msg = \"Message added successfully\";\n      responseObj.data = newObject;\n      responseObj.status = 201;\n      res.io.sockets.emit(\"message-sent\", responseObj);\n      return res.send(responseObj);\n    } catch (error) {\n      //Creating success object\n      responseObj.msg = \"Message adding failed\";\n      responseObj.data = msgObj;\n      responseObj.status = 500;\n      return res.send(responseObj);\n    }\n  } catch (error) {\n    //Creating success object\n    responseObj.msg = \"Message adding failed\";\n    responseObj.data = msgObj;\n    responseObj.status = 500;\n    return res.send(responseObj);\n  }\n};\n"],"file":"Message.js"}